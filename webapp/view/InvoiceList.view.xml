<mvc:View
	controllerName="ui5.walkthrough.controller.InvoiceList"
	xmlns="sap.m"
	xmlns:core="sap.ui.core"
	xmlns:mvc="sap.ui.core.mvc">
	<Table
		id="invoiceList"
		headerText="{i18n>invoiceListTitle}" 
		class="sapUiResponsiveMargin"
		width="auto"
		items="{
            path : 'invoice>/Invoices',
            sorter : {
            path : 'City', 
            group : true
            }
        }">
		<headerToolbar>
			<Toolbar>
				<Title text="{i18n>invoiceListTitle}" />
				<!--<ToolbarSpacer />: Pushes the search field to the right-->
				<ToolbarSpacer />
				<SearchField
					width="50%"
					search=".onFilterInvoices"
				/>
			</Toolbar>
		</headerToolbar>

		<!-- hAlign="End"-> Aligns column content to the right-->
		<columns>
			<Column
				hAlign="End" 
				minScreenWidth="Small"
				demandPopin="true"
				width="5em">
				<Text text="{i18n>Quantity}" />
			</Column>

			<Column>
				<Text text="{i18n>Name}" />
			</Column>

			
			<!-- demandPopin="false":
If the screen size is smaller than the value of minScreenWidth, then:

The column will be hidden completely.

Its content will not be moved into a pop-in layout below the main row content.-->
			<Column
				minScreenWidth="Tablet"
				demandPopin="false">
				<Text text="{i18n>Supplier}" />
			</Column>
			<Column hAlign="End">
				<Text text="{i18n>Price}" />
			</Column>
		</columns>
		<!-- type="Navigation": Adds a navigation arrow on the right of the row-->
		<items>
			<ColumnListItem
				type="Navigation"
				press=".onPress">
				<cells>
					<!-- Displays quantity as a number (non-emphasized, just plain)-->
					<ObjectNumber
						number="{invoice>Quantity}"
						emphasized="false" />
					<ObjectIdentifier title="{invoice>ProductName}" />

					<Text
						core:require="{
								Formatter: 'ui5/walkthrough/model/formatter'
						}"
						text="{invoice>ShipperName}" />

						<!-- view>/currency: Gets currency type from view model-->
					<ObjectNumber
						core:require="{
							Currency: 'sap/ui/model/type/Currency'
						}"
				
						number="{
							parts: [
								'invoice>ExtendedPrice',
								'view>/currency'
							],
							type: 'Currency',
							formatOptions: {
								showMeasure: false
							}
						}"
						unit="{view>/currency}"
						state="{= ${invoice>ExtendedPrice} > 50 ? 'Error' : 'Success' }" />
						<!-- state: Adds a red or green state depending on value:  If price > 50 → Error (red), Else → Success (green)-->
				</cells>
			</ColumnListItem>
		</items>
	</Table>
</mvc:View>